《虚拟机》在最简单的层面上，计算环境可以认为是由硬件、在硬件上运行的操作系统（OS）和在操作系统上运行的应用程序构成。OS知道其下面的硬件的全部容量和能力，并直接控制它。如果在OS和CPU（中央处理器）之间增加一层软件，那么OS就只知道这层增加的额外软件告诉它的内容。OS对其下面的硬件容量和能力的了解依赖于这一插进来的软件层，它只能以插进来的软件层允许它做什么的方式，对下面的硬件进行控制。这一插进来的软件层能告诉OS有关硬件的一切东西，不经过翻译直接将指令传给OS。但是它也有可能没有告诉下面的硬件的所有情况，并有可能在将控制指令传给OS时加进了自己的控制指令。当然，由于存在服务器、网络和Web接口以及其他的设备和接口，这对计算环境而言增加了差异性和复杂度。而利用一层软件来包装一套计算资源和行为并将其作为可以利用的计算环境，就其核心而言就是生成一个虚拟机。虚拟机就是一个计算环境，它的一套资源和环境（通过软件）建立在其他一些计算环境之上。系统管理虚拟机 虚拟机在诸如VMware公司ESX Server和开放源码的Xen虚拟机监控程序中，处于服务器技术的核心地位。这两种产品给服务器提供了同时运行几个基于x86的OS的能力。这些方法只是稍有些不同的变种而已，分别被叫做硬件级虚拟机或系统管理虚拟机。中间软件层（叫做虚拟机监控程序或管理程序）处于OS和硬件之间。此管理程序给所有的OS一种幻觉，认为是在硬件上运行的惟一操作系统。在一个服务器平台上运行几个OS提供了多种优点：更加充分利用功能强大的服务器的资源，为过时的老程序提供向后兼容性，以及区分应用程序使其在不同的OS上运行，从而它们之间不会互相影响。VMware使用透明虚拟化，这意味着运行在管理程序之上的OS不需要进行修改。而Xen使用并行虚拟化，它意味着需要修改OS，以便使它们同时在硬件上运行。Xen声称并行虚拟化提高了速度和效率。托管虚拟机 微软公司的虚拟PC和VMware公司的GSX服务器和工作站被称作托管虚拟机。其中，虚拟机（VM）很像运行在OS上任何一个其他的应用程序。VM应用程序被分成了中间软件层、OS和运行在OS之上的应用程序。比起用于系统管理服务器的方法，该法效率低一些、能力也差一些，但它提供了同样的优点：让用户使用过时的旧程序和将应用程序与系统的其他部分分隔开。例如，当用户想访问危险的网站时，他通过虚拟机进行网上冲浪可以增加一层保护。应用程序级虚拟机 应用程序级虚拟机，如Java虚拟机，与托管模式类似，是作为应用程序运行的。然而，这些虚拟机将中间层与OS合并了。Java虚拟机像应用程序那样在原有OS上运行，Java应用程序在虚拟机上运行。据称，这种编程范例的优点之一就是Java程序无需再编译就能在任何一台Java虚拟机上运行。再编译留给了Java虚拟机的提供商，他必须使之在不同的原有操作系统上运行。并行虚拟机 并行虚拟机是一种稍微不同的建立虚拟机的方法。在这里，中间软件层作为一个守护程序或者服务器程序存在，加上一组库调用，它们必须编译成将在并行虚拟机上运行的应用程序。库调用与服务器程序交互，使得计算机网看上去像是一台有很多并行处理器的计算机。如人们所说，你可以让软件做任何事情。虽然效率和速度可能是问题，只要有软件中间层，虚拟化就能成为现实。然而，这些虚拟机将中间层与OS合并了。Java虚拟机像应用程序那样在原有OS上运行，Java应用程序在虚拟机上运行。据称，这种编程范例的优点之一就是Java程序无需再编译就能在任何一台Java虚拟机上运行。再编译留给了Java虚拟机的提供商，他必须使之在不同的原有操作系统上运行。并行虚拟机 并行虚拟机是一种稍微不同的建立虚拟机的方法。在这里，中间软件层作为一个守护程序或者服务器程序存在，加上一组库调用，它们必须编译成将在并行虚拟机上运行的应用程序。库调用与服务器程序交互，使得计算机网看上去像是一台有很多并行处理器的计算机。如人们所说，你可以让软件做任何事情。虽然效率和速度可能是问题，只要有软件中间层，虚拟化就能成为现实。