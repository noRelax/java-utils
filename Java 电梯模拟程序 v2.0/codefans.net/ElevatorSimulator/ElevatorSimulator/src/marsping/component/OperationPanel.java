/*
 * OperationPanel.java
 *
 * Created on 2005年12月27日, 下午 7:36
 * Download:http://www.codefans.net
 */

package marsping.component;

import marsping.component.button.Button;
import marsping.component.button.FloorButton;
import marsping.component.button.OperationButton;
import marsping.component.type.Floor;
import marsping.component.type.Operation;

/**
 *
 * @author  MarsPing
 */
public class OperationPanel extends javax.swing.JPanel {
    private Button[] opButtons;
    private Button[] fButtons;
    private StatusPanel sp;
    
    /** Creates new form OperationPanel */
    public OperationPanel(ElevatorController controller) {
        sp = new StatusPanel();
        add(sp);
        
        initComponents();
        createButtons(controller);
    }
    
    public void setStatus(){
        sp.setStatus();
    }
    
    public void resetButton(Floor f){
        fButtons[f.ordinal()].resetButton();
        /*
        switch(f){
            case B1:
                buttons[8].resetButton();
                break;
            case F1:
                buttons[9].resetButton();
                break;
            case F2:
                buttons[6].resetButton();
                break;
            case F3:
                buttons[7].resetButton();
                break;
            case F4:
                buttons[4].resetButton();
                break;
            case F5:
                buttons[5].resetButton();
                break;
            case F6:
                buttons[2].resetButton();
                break;
            case F7:
                buttons[3].resetButton();
                break;                
        }
         */
    }
    
    private void createButtons(ElevatorController controller) {
        opButtons = new Button[2];
        
        opButtons[0] = new OperationButton(Operation.OPEN, controller);
        opButtons[1] = new OperationButton(Operation.CLOSE, controller);
        
        fButtons = new Button[8];
        fButtons[7] = new FloorButton(Floor.F7, controller);
        fButtons[6] = new FloorButton(Floor.F6, controller);
        fButtons[5] = new FloorButton(Floor.F5, controller);
        fButtons[4] = new FloorButton(Floor.F4, controller);
        fButtons[3] = new FloorButton(Floor.F3, controller);
        fButtons[2] = new FloorButton(Floor.F2, controller);
        fButtons[1] = new FloorButton(Floor.F1, controller);
        fButtons[0] = new FloorButton(Floor.B1, controller);
        
        for(int i=0;i<opButtons.length;i++){
            opbPanel.add(opButtons[i]);
        }        
        
        fbPanel.add(fButtons[6]);        
        fbPanel.add(fButtons[7]);
        fbPanel.add(fButtons[4]);        
        fbPanel.add(fButtons[5]);
        fbPanel.add(fButtons[2]);
        fbPanel.add(fButtons[3]);
        fbPanel.add(fButtons[0]);
        fbPanel.add(fButtons[1]);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        opbPanel = new javax.swing.JPanel();
        fbPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(102, 102, 102));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255), 2));
        setPreferredSize(new java.awt.Dimension(110, 330));
        opbPanel.setBackground(new java.awt.Color(102, 102, 102));
        add(opbPanel);

        fbPanel.setBackground(new java.awt.Color(102, 102, 102));
        fbPanel.setPreferredSize(new java.awt.Dimension(100, 210));
        add(fbPanel);

    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel fbPanel;
    private javax.swing.JPanel opbPanel;
    // End of variables declaration//GEN-END:variables
    
}
