package marsping;
/*
 * NewJFrame.java
 *
 * Created on 2005年12月27日, 下午 7:51
 */

import marsping.component.CallPanel;
import marsping.component.ElevatorController;
import marsping.component.OperationPanel;
import marsping.component.StatusPanel;
import marsping.component.type.Floor;
import java.util.ArrayList;

/**
 *
 * @author  MarsPing
 */
public class ElevatorSimulator extends javax.swing.JFrame {
    private ElevatorController controller;    
    
    /** Creates new form NewJFrame */
    public ElevatorSimulator() {
        controller = new ElevatorController();
        CurrentFloorPanel cfPanel = new CurrentFloorPanel();
        ListPanel lp = new ListPanel(controller);
        OperationPanel opPanel = new OperationPanel(controller);
        ArrayList<CallPanel> cpList = createCallPanelList();
        
        controller.setOperationPanel(opPanel);
        controller.setCallPanelList(cpList);
        controller.setCurrentFloorPanel(cfPanel);
        controller.setListPanel(lp);
        
        initComponents();
        
        fPanel.add(cpList.get(7));
        fPanel.add(cpList.get(6));
        fPanel.add(cpList.get(5));
        fPanel.add(cpList.get(4));
        fPanel.add(cpList.get(3));
        fPanel.add(cpList.get(2));
        fPanel.add(cpList.get(1));
        fPanel.add(cpList.get(0));
        
        cfp.add(cfPanel);
        cfPanel.setAllPanel();
        listPanel.add(lp);
        cpList.get(1).setBorder();
        operationPanel.add(opPanel);
    }
    
    private ArrayList<CallPanel> createCallPanelList(){
        ArrayList<CallPanel> cpList = new ArrayList<CallPanel>();
        
        cpList.add(new CallPanel(Floor.B1, controller));
        cpList.add(new CallPanel(Floor.F1, controller));
        cpList.add(new CallPanel(Floor.F2, controller));
        cpList.add(new CallPanel(Floor.F3, controller));
        cpList.add(new CallPanel(Floor.F4, controller));
        cpList.add(new CallPanel(Floor.F5, controller));
        cpList.add(new CallPanel(Floor.F6, controller));
        cpList.add(new CallPanel(Floor.F7, controller));
        
        return cpList;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        operationPanel = new javax.swing.JPanel();
        floorScrollPane = new javax.swing.JScrollPane();
        fPanel = new javax.swing.JPanel();
        powerButton = new javax.swing.JButton();
        cfp = new javax.swing.JPanel();
        listPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("\u96fb\u68af\u6a21\u64ec\u7a0b\u5f0f  ver 2.01                                    by MarsPing");
        setBackground(new java.awt.Color(204, 204, 255));
        setResizable(false);

        fPanel.setLayout(new java.awt.GridLayout(8, 0));

        floorScrollPane.setViewportView(fPanel);

        powerButton.setBackground(new java.awt.Color(153, 0, 0));
        powerButton.setFont(new java.awt.Font("Dialog", 1, 14));
        powerButton.setForeground(new java.awt.Color(51, 51, 51));
        powerButton.setText("Power");
        powerButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        powerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                powerButtonMouseClicked(evt);
            }
        });

        cfp.setLayout(new java.awt.BorderLayout());

        cfp.setPreferredSize(new java.awt.Dimension(60, 365));

        listPanel.setLayout(new java.awt.BorderLayout());

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(cfp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(powerButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(floorScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 241, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(operationPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(listPanel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(operationPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 361, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, floorScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .add(cfp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(powerButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(64, 64, 64))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(listPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void powerButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_powerButtonMouseClicked
        // TODO add your handling code here:
        if(controller.isPowerOn()){
            controller.turnOff();
            powerButton.setBackground(new java.awt.Color(153, 0, 0));
        }else{
            controller.turnOn();
            
            Thread thread = new Thread(controller);
            thread.start();
            powerButton.setBackground(new java.awt.Color(255, 0, 0));
        }
    }//GEN-LAST:event_powerButtonMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ElevatorSimulator().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel cfp;
    private javax.swing.JPanel fPanel;
    private javax.swing.JScrollPane floorScrollPane;
    private javax.swing.JPanel listPanel;
    private javax.swing.JPanel operationPanel;
    private javax.swing.JButton powerButton;
    // End of variables declaration//GEN-END:variables
    
}
